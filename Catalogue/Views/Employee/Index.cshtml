@model PagedList<Catalogue.Models.Tables.Employee>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Сотрудники";
    Layout = "~/Views/Shared/_AminPanel.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h2>Сотрудники</h2>
                    <p>
                        <a class="btn btn-default" name="createButton" id="createButton" href="@Url.Action("Create","Employee")">Добавить новую запись</a>
                    </p>
                </div>

                @using (Ajax.BeginForm("EmployeeSearch", "Search", null,
                new AjaxOptions
                {
                    UpdateTargetId = "employee-list",
                    LoadingElementId = "loading",
                    OnSuccess = "hideAccordion()"
                },
                new { @class = "ajax-form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="header">

                        <div class="row">
                            <div class="col-md-11">
                                <input type="text" class="form-control" name="name" placeholder="впишите имя сотрудника">
                            </div>
                            <div class="col-md-1">
                                <span class="input-group-btn">
                                    <button type="submit" class="btn btn-default"><span class="fa fa-search"></span> Искать</button>
                                </span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <label class="control-label" for="position-select-list">Выберите должность (опционально)</label>
                                <select class="form-control" id="position-select-list" name="positionId">
                                    <option selected value="">Должность</option>
                                    @foreach (Catalogue.Models.Tables.Position position in ViewBag.Positions)
                                    {
                                        <option value="@position.PositionId">@position.PositionName</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label" for="department-select-list">Выберите отдел (опционально)</label>
                                <select id="department-select-list" class="form-control" name="departmentId">
                                    <option selected value="">Отдел</option>
                                    @foreach (Catalogue.Models.Tables.Department department in ViewBag.Departments)
                                    {
                                        <option value="@department.DepartmentId">@department.DepartmentName</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label" for="administration-select-list">Выберите орган управления (опционально)</label>
                                <select id="administration-select-list" class="form-control" name="administrationId">
                                    <option selected value="">Орган управления</option>
                                    @foreach (Catalogue.Models.Tables.Administration administration in ViewBag.Admins)
                                    {
                                        <option value="@administration.AdministrationId">@administration.AdministrationName</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label" for="division-select-list">Выберите регион (опционально)</label>
                                <select id="division-select-list" class="form-control" name="divisionId">
                                    <option selected value="">Регион</option>
                                    @foreach (Catalogue.Models.Tables.Division division in ViewBag.Divisions)
                                    {
                                        <option value="@division.DivisionId">@division.DivisionName</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div><!-- /input-group -->
                }
                <div id="loading" style="display:none"><p>Идет поиск</p></div>


                <hr>

                <div id="results"></div>
                <div id="employee-list"></div>

                <div class="content" id="accordion">
                    <table class="table" id="listTable">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeePhoto)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().Department.DepartmentName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().Position.PositionName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeeFullName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeeRoom)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeeAddress)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeePhone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeePersonalPhone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeeEmail)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().EmployeeSkype)
                            </th>    
                            <th>
                                @Html.DisplayNameFor(model => model.First().DateAdoption)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().DateDismissal)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().Dismissed)
                            </th>                           
                            <th></th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @if (item.EmployeePhoto == null)
                                    { <img src="~/Content/assets/img/default-avatar.png" width="100" height="100" /> }
                                    else
                                    { 
                                        <span data-link="@Url.Content($"~/images/{item.EmployeePhoto}")" class="lightbox">
                                            <img src="~/images/@item.EmployeePhoto" class="tumb" />
                                        </span>
                                    }
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.Department.DepartmentName)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.Position.PositionName)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeeFullName)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeeRoom)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeeAddress)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeePhone)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeePersonalPhone)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeeEmail)
                                </td>
                                <td class="td-title">
                                    @Html.DisplayFor(modelItem => item.EmployeeSkype)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateAdoption)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateDismissal)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dismissed)
                                </td>

                               
                                <td>
                                    <div class="btn-group">
                                        <a class="btn btn-default" name="editButton" id="editButton" href="@Url.Action("Edit","Employee", new {id = item.EmployeeId})"><i class="fa fa-pencil" aria-hidden="true" title="Редактировать" data-toggle="tooltip" data-placement="top"></i></a>
                                        <a class="btn btn-default" name="detailsButton" id="detailsButton" href="@Url.Action("Details","Employee", new {id = item.EmployeeId})"><i class="fa fa-eye" aria-hidden="true" title="Просмотреть" data-toggle="tooltip" data-placement="top"></i></a>
                                        <a class="btn btn-default" name="deleteButton" id="deleteButton" href="@Url.Action("Delete","Employee", new {id = item.EmployeeId})"><i class="fa fa-trash" aria-hidden="true" title="Удалить" data-toggle="tooltip" data-placement="top"></i></a>
                                    </div>
                                </td>
                            </tr>
                        }

                    </table>

                    <div id="result"> </div>
                   
                    <div id="paginationToDelete">
                        @Html.PagedListPager(Model, page => Url.Action("AjaxPositionList", new { page }),
                         PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "result", OnSuccess = "removeListAndPagination()" }))
                        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="backdrop"></div>
<div id="box">
    <div id="close">Закрыть <i class="pe-7s-close-circle"></i></div>
    <img src="" alt="" id="image">
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var lightbox = document.getElementsByClassName('lightbox');

        var backdrop = document.getElementById("backdrop");
        var box = document.getElementById("box");
        var close = document.getElementById("close");
        var image = document.getElementById("image");

        for (var i = 0; i < lightbox.length; i++) {
            lightbox[i].addEventListener('click', event, false);
        }

        function event() {
            var link = this.dataset.link;

            backdrop.style.opacity = '.50';
            backdrop.style.display = 'block';

            box.style.opacity = '1.00';
            box.style.display = 'block';

            image.src = link;
        }

        close.addEventListener('click', close_box, false);
        backdrop.addEventListener('click', close_box, false);

        function close_box() {
            backdrop.style.opacity = '0';
            backdrop.style.display = 'none';

            box.style.opacity = '0';
            box.style.display = 'none';
        }
    })
</script>