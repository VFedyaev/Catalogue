@model Catalogue.Models.Tables.Employee

@{
    ViewBag.Title = "Редактирование сотрудника";
    Layout = "~/Views/Shared/_AminPanel.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h2>Редактирование сотрудника</h2>
                </div>
                <div class="content">
                   @using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
                   {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.EmployeeId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeFullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeFullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EployeeRoom, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EployeeRoom, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EployeeRoom, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeePhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeePhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeePersonalPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeePersonalPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeePersonalPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeSkype, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeSkype, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeSkype, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PositionId, "PositionId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.PositionId, ViewBag.PositionList as SelectList, "Выберите должность...")
                                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentList as SelectList, "Выберите отдел...")
                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateAdoption, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateAdoption, new { htmlAttributes = new { @class = "date-picker" } })
                                @Html.ValidationMessageFor(model => model.DateAdoption, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateDismissal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateDismissal, new { htmlAttributes = new { @class = "date-picker", @id = "dateDis" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Dismissed, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox-inline custom-checkbox">
                                    @Html.CheckBoxFor(model => model.Dismissed, new { @class = "custom-checkbox", @id = "checkBox" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="editor-field">
                                @if (Model.EmployeePhoto == null)
                                {
                                    <img src="~/Content/assets/img/default-avatar.png" width="100" height="100" />
                                    
                                    @Html.ValidationMessageFor(model => model.EmployeePhoto, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                     <img src="~/images/@Model.EmployeePhoto" width="100" height="100" />
                                     
                                     @Html.ValidationMessageFor(model => model.EmployeePhoto, "", new { @class = "text-danger" })
                                }
                                <input type="file" name="productImg" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Сохранить" class="btn btn-default" /> |
                                <a class="btn btn-default" name="backButton" id="backButton" href="@Url.Action("Index","Employee")">Назад</a>
                            </div>
                        </div>
                    </div>
                   }
                @Scripts.Render("~/bundles/jquery")
                @Scripts.Render("~/bundles/jqueryval")
                @Scripts.Render("~/Scripts/app.js")
                    <script>
                        check();
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>